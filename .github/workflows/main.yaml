name: Release application

on:
  push:
    branches:
      - '**'
    paths:
      - 'part3/**'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-west2-c
  DEPLOYMENT: todo-app-dep
  BRANCH: ${{ github.ref_name }}
  APP_IMAGE: todo-app
  BACKEND_IMAGE: todo-backend
  CRON_IMAGE: random-todo-generator
  BUILD_CONTEXT: part3/3.03
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for gcloud
        run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Build and publish todo-app
        run: |-
            docker build -f ${{ env.BUILD_CONTEXT }}/Dockerfile.app -t gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }} ${{ env.BUILD_CONTEXT }}
            docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
  
      - name: Build and publish todo-backend
        run: |-
            docker build -f ${{ env.BUILD_CONTEXT }}/Dockerfile.backend -t gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }} ${{ env.BUILD_CONTEXT }}
            docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
  
      - name: Build and publish random-todo-generator
        run: |-
            docker build -f ${{ env.BUILD_CONTEXT }}/Dockerfile.cron -t gcr.io/${{ env.PROJECT_ID }}/${{ env.CRON_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }} ${{ env.BUILD_CONTEXT }}
            docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.CRON_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
  
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
  
      - name: Create and set Kubernetes Namespace
        run: |-
          if [ "${{ github.ref_name }}" = "main" ]; then
            NAMESPACE=default
          else
            NAMESPACE=${GITHUB_REF#refs/heads/}
            kubectl create namespace $NAMESPACE || true
          fi
          kubectl config set-context --current --namespace=$NAMESPACE


      - name: Create Kubernetes Secret
        run: |-
            kubectl create secret generic postgres-secret \
              --namespace $NAMESPACE \
              --from-literal=POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} \
              --from-literal=DATABASE_URL=${{ env.DATABASE_URL }} \
              --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to GKE
        run: |-
            cd ${{ env.BUILD_CONTEXT }}
            kustomize edit set namespace $NAMESPACE
            kustomize edit set image PROJECT/APP_IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
            kustomize edit set image PROJECT/BACKEND_IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
            kustomize edit set image PROJECT/CRON_IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.CRON_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
            kustomize build . | kubectl apply -f -
            sleep 5
            kubectl rollout status deployment/${{ env.DEPLOYMENT }} --namespace=$NAMESPACE
            kubectl get cronjobs --namespace=$NAMESPACE
            kubectl get services --namespace=$NAMESPACE -o wide